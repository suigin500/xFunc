<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutButtonHeader" xml:space="preserve">
    <value>xFuncについて</value>
  </data>
  <data name="AboutButtonToolTip" xml:space="preserve">
    <value>xFuncについて</value>
  </data>
  <data name="AboutWindowTitle" xml:space="preserve">
    <value>xFuncについて</value>
  </data>
  <data name="AdditionalMathExpanderHeader" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="AnglesGroupHeader" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="AnswerTextBox" xml:space="preserve">
    <value>解</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Dmitry Kischenko</value>
  </data>
  <data name="AuthorTextBox" xml:space="preserve">
    <value>Author:</value>
  </data>
  <data name="ClipboardGroupHeader" xml:space="preserve">
    <value>クリップボード</value>
  </data>
  <data name="cm" xml:space="preserve">
    <value>cm</value>
  </data>
  <data name="ConstantsExpanderHeader" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="CopyButtonHeader" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="CopyScreenTipText" xml:space="preserve">
    <value>選択された文字列をコピー</value>
  </data>
  <data name="CopyScreenTipTitle" xml:space="preserve">
    <value>コピー (Ctrl+C)</value>
  </data>
  <data name="CutButtonHeader" xml:space="preserve">
    <value>切り取り</value>
  </data>
  <data name="CutScreenTipText" xml:space="preserve">
    <value>選択された文字列を切り取り</value>
  </data>
  <data name="CutScreenTipTitle" xml:space="preserve">
    <value>切り取り(Ctrl+X)</value>
  </data>
  <data name="DegreeButtonHeader" xml:space="preserve">
    <value>度</value>
  </data>
  <data name="DegreeScreenTipText" xml:space="preserve">
    <value>角度として度を使用する</value>
  </data>
  <data name="DegreeScreenTipTitle" xml:space="preserve">
    <value>度 (Ctrl+Alt+D)</value>
  </data>
  <data name="ExpressionsTextBox" xml:space="preserve">
    <value>式</value>
  </data>
  <data name="ExpressionTextBox" xml:space="preserve">
    <value>式</value>
  </data>
  <data name="GradianButtonHeader" xml:space="preserve">
    <value>グラード</value>
  </data>
  <data name="GradianScreenTipText" xml:space="preserve">
    <value>角度としてグラードを使用する</value>
  </data>
  <data name="GradianScreenTipTitle" xml:space="preserve">
    <value>グラード (Ctrl+Alt+G)</value>
  </data>
  <data name="GraphsTab" xml:space="preserve">
    <value>グラフ</value>
  </data>
  <data name="HomePageTextBox" xml:space="preserve">
    <value>ホームページ</value>
  </data>
  <data name="HomeRibbonTabHeader" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="HyperbolicExpanderHeader" xml:space="preserve">
    <value>双曲線</value>
  </data>
  <data name="IndexOutOfRangeExceptionError" xml:space="preserve">
    <value>おそらく、変数が正しく入力されていません。</value>
  </data>
  <data name="LogicTab" xml:space="preserve">
    <value>論理式</value>
  </data>
  <data name="MathTab" xml:space="preserve">
    <value>数式</value>
  </data>
  <data name="NotSupportedOperationError" xml:space="preserve">
    <value>この演算子はサポートしていません</value>
  </data>
  <data name="NumberAndArithmeticExpanderHeader" xml:space="preserve">
    <value>算術</value>
  </data>
  <data name="PasteButtonHeader" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="PasteScreenTipText" xml:space="preserve">
    <value>クリップボードから貼り付け</value>
  </data>
  <data name="PasteScreenTipTitle" xml:space="preserve">
    <value>貼り付け (Ctrl+V)</value>
  </data>
  <data name="RadianButtonHeader" xml:space="preserve">
    <value>ラジアン</value>
  </data>
  <data name="RadianScreenTipText" xml:space="preserve">
    <value>角度としてラジアンを使用する</value>
  </data>
  <data name="RadianScreenTipTitle" xml:space="preserve">
    <value>ラジアン(Ctrl+Alt+R)</value>
  </data>
  <data name="RedoButtonHeader" xml:space="preserve">
    <value>やり直し</value>
  </data>
  <data name="RedoScreenTipText" xml:space="preserve">
    <value>直前の変更をやり直す</value>
  </data>
  <data name="RedoScreenTipTitle" xml:space="preserve">
    <value>やり直し(Ctrl+Y)</value>
  </data>
  <data name="ShowGridCheckBox" xml:space="preserve">
    <value>グリッド線を表示</value>
  </data>
  <data name="StandartExpanderHeader" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="TrigonometricExpanderHeader" xml:space="preserve">
    <value>三角関数</value>
  </data>
  <data name="TruthTableTab" xml:space="preserve">
    <value>真理値表</value>
  </data>
  <data name="UndoButtonHeader" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="UndoScreenTipText" xml:space="preserve">
    <value>直前の変更を元に戻す</value>
  </data>
  <data name="UndoScreenTipTitle" xml:space="preserve">
    <value>元に戻す(Ctrl+Z)</value>
  </data>
  <data name="VariableNotFoundExceptionError" xml:space="preserve">
    <value>変数が見つかりません。</value>
  </data>
  <data name="VersionTextBox" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="BitwiseExpanderHeader" xml:space="preserve">
    <value>ビット演算</value>
  </data>
  <data name="ClearButtonHeader" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="ClearScreenTipText" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="ClearScreenTipTitle" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="DeleteExpButtonHeader" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="DeleteExpScreenTipText" xml:space="preserve">
    <value>選択された文字列を削除</value>
  </data>
  <data name="DeleteExpScreenTipTitle" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="ExpListGroupHeader" xml:space="preserve">
    <value>式のリスト</value>
  </data>
  <data name="CopyAnswerMenuItem" xml:space="preserve">
    <value>解をコピー</value>
  </data>
  <data name="CopyExpressionMenuItem" xml:space="preserve">
    <value>式をコピー</value>
  </data>
  <data name="DeleteMenuItem" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="ToClipboardMenuItem" xml:space="preserve">
    <value>クリップボードへ</value>
  </data>
  <data name="ToInputMenuItem" xml:space="preserve">
    <value>入力へ</value>
  </data>
  <data name="AdditionalLogicExpanderHeader" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="AssignFunction" xml:space="preserve">
    <value>式 '{1}'が関数 '{0}'に割り当てられました。</value>
  </data>
  <data name="AssignVariable" xml:space="preserve">
    <value>値 '{1}'が変数 '{0}'に割り当てられました。</value>
  </data>
  <data name="UndefineFunction" xml:space="preserve">
    <value>関数'{0}'は削除されました。</value>
  </data>
  <data name="UndefineVariable" xml:space="preserve">
    <value>変数'{0}'は削除されました。</value>
  </data>
  <data name="AvailableUpdate" xml:space="preserve">
    <value>更新が利用可能です。</value>
  </data>
  <data name="VariablesTitle" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="AnswerBaseGroupHeader" xml:space="preserve">
    <value>基数</value>
  </data>
  <data name="FunctionButtonHeader" xml:space="preserve">
    <value>関数</value>
  </data>
  <data name="ParamGroupHeader" xml:space="preserve">
    <value>式のパラメータ</value>
  </data>
  <data name="VariablesButtonHeader" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="FunctionsTitle" xml:space="preserve">
    <value>関数</value>
  </data>
  <data name="FuncNameHeader" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FuncValueHeader" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="VarNameHeader" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="VarValueHeader" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="FuncScreenTitText" xml:space="preserve">
    <value>入力されたすべての関数をウィンドウに表示</value>
  </data>
  <data name="FuncScreenTitTitle" xml:space="preserve">
    <value>関数 (Ctrl+Alt+F)</value>
  </data>
  <data name="VarScreenTitText" xml:space="preserve">
    <value>入力したすべての変数をウィンドウに表示</value>
  </data>
  <data name="VarScreenTitTitle" xml:space="preserve">
    <value>変数 (Ctrl+Alt+V)</value>
  </data>
  <data name="ArccosecantToolTip" xml:space="preserve">
    <value>arccsc. 例: arccsc(90) or arccosec(90)</value>
  </data>
  <data name="ArccosineToolTip" xml:space="preserve">
    <value>arccos. 例. Example: arccos(90)</value>
  </data>
  <data name="ArccotangentToolTip" xml:space="preserve">
    <value>arccot. 例. Example: arccot(90) or arcctg(90)</value>
  </data>
  <data name="ArcsecantToolTip" xml:space="preserve">
    <value>arcsec. 例: arcsec(90)</value>
  </data>
  <data name="ArcsineToolTip" xml:space="preserve">
    <value>arcsin. 例: arcsin(1)</value>
  </data>
  <data name="ArctangentToolTip" xml:space="preserve">
    <value>arcta. 例: arctan(90) or arctg(90)</value>
  </data>
  <data name="CosecantToolTip" xml:space="preserve">
    <value>csc. 例: csc(90) or cosec(90)</value>
  </data>
  <data name="CosineToolTip" xml:space="preserve">
    <value>cos. 例: cos(90)</value>
  </data>
  <data name="CotangentToolTip" xml:space="preserve">
    <value>cot. 例: cot(90) or ctg(90)</value>
  </data>
  <data name="SecantToolTip" xml:space="preserve">
    <value>sec. 例: sec(90)</value>
  </data>
  <data name="SineToolTip" xml:space="preserve">
    <value>sin. 例: sin(90)</value>
  </data>
  <data name="TangentToolTip" xml:space="preserve">
    <value>tan. 例: tan(90) or tg(90)</value>
  </data>
  <data name="AbsToolTip" xml:space="preserve">
    <value>絶対値. 例: abs(-1)</value>
  </data>
  <data name="NthRootToolTip" xml:space="preserve">
    <value>べき乗根. 例: root(27, 3)</value>
  </data>
  <data name="PowerOfTwoToolTip" xml:space="preserve">
    <value>２乗. 例: 7^2</value>
  </data>
  <data name="PowerOfYToolTip" xml:space="preserve">
    <value>べき乗. 例: 7^4</value>
  </data>
  <data name="SquareRootToolTip" xml:space="preserve">
    <value>平方根. 例: sqrt(9)</value>
  </data>
  <data name="LgToolTip" xml:space="preserve">
    <value>常用対数(底 10). 例: lg(3)</value>
  </data>
  <data name="LnToolTip" xml:space="preserve">
    <value>自然対数(底 e) 例: ln(10)</value>
  </data>
  <data name="LogToolTip" xml:space="preserve">
    <value>対数 "y" of "x". 例: log(2, 4)</value>
  </data>
  <data name="ArcoshToolTip" xml:space="preserve">
    <value>arcosh. 例: arcosh(90) or arch(90)</value>
  </data>
  <data name="ArcothToolTip" xml:space="preserve">
    <value>arcoth. 例: arcoth(90) or arcth(90)</value>
  </data>
  <data name="ArcschToolTip" xml:space="preserve">
    <value>arcsch. 例: arcsch(90)</value>
  </data>
  <data name="ArsechToolTip" xml:space="preserve">
    <value>arsech. 例: arsech(90)</value>
  </data>
  <data name="ArsinhToolTip" xml:space="preserve">
    <value>arsinh. 例: arsinh(90) or arsh(90)</value>
  </data>
  <data name="ArtanhToolTip" xml:space="preserve">
    <value>artanh. 例: artanh(90) or arth(90)</value>
  </data>
  <data name="CoshToolTip" xml:space="preserve">
    <value>cosh. 例: cosh(90) or ch(90)</value>
  </data>
  <data name="CothToolTip" xml:space="preserve">
    <value>coth. 例: coth(90) or cth(90)</value>
  </data>
  <data name="CschToolTip" xml:space="preserve">
    <value>csch. 例: csch(90)</value>
  </data>
  <data name="SechToolTip" xml:space="preserve">
    <value>sech. 例: sech(90)</value>
  </data>
  <data name="SinhToolTip" xml:space="preserve">
    <value>sinh. 例: sinh(90) or sh(90)</value>
  </data>
  <data name="TanhToolTip" xml:space="preserve">
    <value>tanh. Example: tanh(90) or th(90)</value>
  </data>
  <data name="AndToolTip" xml:space="preserve">
    <value>ビットAND演算子. 有理数は小数点以下切り捨て. 例: x and y, x &amp; y</value>
  </data>
  <data name="DefToolTip" xml:space="preserve">
    <value>指定された変数に値を代入するか、ユーザー関数を作成. 例: x := 1, f(x) := sin(x)</value>
  </data>
  <data name="ExitMenu" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="ExitToolTip" xml:space="preserve">
    <value>アプリケーションを閉じる</value>
  </data>
  <data name="FileMenu" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="NewMenu" xml:space="preserve">
    <value>新規</value>
  </data>
  <data name="NotToolTip" xml:space="preserve">
    <value>ビットNOT演算子. 有理数は小数点以下切り捨て. 例: not(3)</value>
  </data>
  <data name="OpenMenu" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="OrToolTip" xml:space="preserve">
    <value>ビットOR演算. 有理数は小数点以下切り捨て. 例: x or y, x | y</value>
  </data>
  <data name="SaveMenu" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SettingsMenu" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="SimplifyToolTip" xml:space="preserve">
    <value>式を単純化. 例: simplify(arcsin(sin(x)))</value>
  </data>
  <data name="UndefToolTip" xml:space="preserve">
    <value>指定された変数またはユーザー関数を削除. 例: undef(x)</value>
  </data>
  <data name="XOrToolTip" xml:space="preserve">
    <value>ビットXOR演算子. 有理数は小数点以下切り捨て. 例: x xor y</value>
  </data>
  <data name="SettingsCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="SettingsSave" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SettingsToolTip" xml:space="preserve">
    <value>設定を表示</value>
  </data>
  <data name="SettingsViewTitle" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="SettingsAngle" xml:space="preserve">
    <value>Default _angle measurement:</value>
  </data>
  <data name="SettingsAutoLang" xml:space="preserve">
    <value>自動選択</value>
  </data>
  <data name="SettingsBin" xml:space="preserve">
    <value>２進数</value>
  </data>
  <data name="SettingsCheckUpdates" xml:space="preserve">
    <value>更新の確認</value>
  </data>
  <data name="SettingsDec" xml:space="preserve">
    <value>10進数</value>
  </data>
  <data name="SettingsDegree" xml:space="preserve">
    <value>度</value>
  </data>
  <data name="SettingsGradian" xml:space="preserve">
    <value>グラード</value>
  </data>
  <data name="SettingsHex" xml:space="preserve">
    <value>16進数</value>
  </data>
  <data name="SettingsLanguageLabel" xml:space="preserve">
    <value>_Language*:</value>
  </data>
  <data name="SettingsMaxNumber" xml:space="preserve">
    <value>式の最大数:</value>
  </data>
  <data name="SettingsNumber" xml:space="preserve">
    <value>Default _number base:</value>
  </data>
  <data name="SettingsOct" xml:space="preserve">
    <value>8進数</value>
  </data>
  <data name="SettingsRadian" xml:space="preserve">
    <value>ラジアン</value>
  </data>
  <data name="SettingsRemember" xml:space="preserve">
    <value>_Remember number base and angle measurement</value>
  </data>
  <data name="SettingsRightToolBar" xml:space="preserve">
    <value>Remember right _tool bar state.</value>
  </data>
  <data name="SettingsWindowPos" xml:space="preserve">
    <value>Remember window state and _position.</value>
  </data>
  <data name="SettingsReset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="SettingsLanguageToolTip" xml:space="preserve">
    <value>言語はプログラムの再起動後に設定されます。</value>
  </data>
  <data name="AboutToolTipTitle" xml:space="preserve">
    <value>xFuncについて (F1)</value>
  </data>
  <data name="ExitToolTipTitle" xml:space="preserve">
    <value>戻る (Alt+F4)</value>
  </data>
  <data name="SettingsToolTipTitle" xml:space="preserve">
    <value>設定(Alt+S)</value>
  </data>
  <data name="MathParameterType_Constant" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="MathParameterType_Normal" xml:space="preserve">
    <value>変数</value>
  </data>
  <data name="MathParameterType_ReadOnly" xml:space="preserve">
    <value>読み込み専用</value>
  </data>
  <data name="AddVarCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="AddVarName" xml:space="preserve">
    <value>_Name:</value>
  </data>
  <data name="AddVarOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AddVarReadOnly" xml:space="preserve">
    <value>読み込み専用</value>
  </data>
  <data name="AddVarTitle" xml:space="preserve">
    <value>新しい変数を追加</value>
  </data>
  <data name="AddVarValue" xml:space="preserve">
    <value>_Value:</value>
  </data>
  <data name="AddFuncCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="AddFuncFunc" xml:space="preserve">
    <value>_Function:</value>
  </data>
  <data name="AddFuncName" xml:space="preserve">
    <value>_Name:</value>
  </data>
  <data name="AddFuncOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AddFuncTitle" xml:space="preserve">
    <value>新規関数の追加</value>
  </data>
  <data name="ErrorHeader" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="AddFuncError" xml:space="preserve">
    <value>関数名が不正です。</value>
  </data>
  <data name="GCDToolTip" xml:space="preserve">
    <value>最大公約数. 例: gcd(2, 4)</value>
  </data>
  <data name="LCMToolTip" xml:space="preserve">
    <value>最小公倍数. 例: lcm(2, 4)</value>
  </data>
  <data name="FactToolTip" xml:space="preserve">
    <value>階乗. 例: fact(4) or 4!</value>
  </data>
  <data name="ProductToolTip" xml:space="preserve">
    <value>総乗. 例: product(式, 乗算の開始, 乗算の終了, 増加量, 変数名)</value>
  </data>
  <data name="SumToolTip" xml:space="preserve">
    <value>総和. 例: sum(式, 加算の開始, 加算の終了, 増加量, 変数名)</value>
  </data>
  <data name="MatrixExpanderHeader" xml:space="preserve">
    <value>行列</value>
  </data>
  <data name="DetToolTip" xml:space="preserve">
    <value>行列式. 例: det({{1, 3}, {9, 4}})</value>
  </data>
  <data name="TransposeToolTip" xml:space="preserve">
    <value>行列の転置. 例: transpose({{1, 3}, {9, 4}})</value>
  </data>
  <data name="InverseToolTip" xml:space="preserve">
    <value>逆行列. 例: inverse({{1, 3}, {9, 4}})</value>
  </data>
  <data name="RoundToolTip" xml:space="preserve">
    <value>値を最も近い整数または指定された桁数に丸める. 例: round(数値, 桁数).</value>
  </data>
  <data name="CeilToolTip" xml:space="preserve">
    <value>指定された数以上の最小の整数を返す例: ceil(5.5555).</value>
  </data>
  <data name="FloorToolTip" xml:space="preserve">
    <value>指定された数以下の最大の整数を返す. 例: floor(5.55555).</value>
  </data>
  <data name="ProgExpanderHeader" xml:space="preserve">
    <value>プログラミング</value>
  </data>
  <data name="WhileToolTip" xml:space="preserve">
    <value>Whileループ. 例: while(x := x + 1, x &lt; 10).</value>
  </data>
  <data name="ForToolTip" xml:space="preserve">
    <value>Forループ. 例: for(z := z + 1, x := 0, x &lt; 10, x := x + 1).</value>
  </data>
  <data name="IfToolTip" xml:space="preserve">
    <value>分岐条件. 例: if(x &lt; 2, sin(x), cos(x)).</value>
  </data>
  <data name="EqualToolTip" xml:space="preserve">
    <value>等価演算子. 例: x == 10.</value>
  </data>
  <data name="NotEqualToolTip" xml:space="preserve">
    <value>等しくない. 例: x != 10.</value>
  </data>
  <data name="LessThanToolTip" xml:space="preserve">
    <value>より小さい. 例: x &lt; 10.</value>
  </data>
  <data name="GreaterThanToolTip" xml:space="preserve">
    <value>より大きい. 例: x &gt; 10.</value>
  </data>
  <data name="LessOrEqualToolTip" xml:space="preserve">
    <value>以下. 例: x &lt;= 10.</value>
  </data>
  <data name="GreaterOrEqualToolTip" xml:space="preserve">
    <value>以上. 例: x &gt;= 10.</value>
  </data>
  <data name="ConditionalAndToolTip" xml:space="preserve">
    <value>定数</value>
  </data>
  <data name="ConditionalOrToolTip" xml:space="preserve">
    <value>条件付きOR演算子. 例: x == 0 || y != 0.</value>
  </data>
  <data name="AddAssignToolTip" xml:space="preserve">
    <value>指定された値を加算. 例: x += 2.</value>
  </data>
  <data name="SubAssignToolTip" xml:space="preserve">
    <value>減算した値を代入. 例: x -= 2.</value>
  </data>
  <data name="MulAssignToolTip" xml:space="preserve">
    <value>乗算した値を代入. : x *= 2.</value>
  </data>
  <data name="DivAssignToolTip" xml:space="preserve">
    <value>除算した値を代入. 例: x /= 2.</value>
  </data>
  <data name="ToolsGroupHeader" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="ConverterButtonHeader" xml:space="preserve">
    <value>単位変換</value>
  </data>
  <data name="ConverterScreenTipTitle" xml:space="preserve">
    <value>単位変換(Ctrl+Alt+C)</value>
  </data>
  <data name="ConverterScreenTipText" xml:space="preserve">
    <value>単位変換</value>
  </data>
  <data name="ConverterTitle" xml:space="preserve">
    <value>単位変換</value>
  </data>
  <data name="ConverterTypeText" xml:space="preserve">
    <value>_Converter Type:</value>
  </data>
  <data name="FromText" xml:space="preserve">
    <value>From:</value>
  </data>
  <data name="ToText" xml:space="preserve">
    <value>To:</value>
  </data>
  <data name="UnitsText" xml:space="preserve">
    <value>_Unit:</value>
  </data>
  <data name="ValueText" xml:space="preserve">
    <value>_Value:</value>
  </data>
  <data name="ConverterCalculateText" xml:space="preserve">
    <value>演算</value>
  </data>
  <data name="SettingsSaveUF" xml:space="preserve">
    <value>関数を保存</value>
  </data>
  <data name="SaveAsMenu" xml:space="preserve">
    <value>名前を付けて保存</value>
  </data>
</root>